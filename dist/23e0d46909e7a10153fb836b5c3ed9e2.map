{"version":3,"sources":["node_modules\\folktale\\helpers\\warn-deprecation.js","node_modules\\folktale\\helpers\\extend.js","node_modules\\folktale\\adt\\union\\union.js","node_modules\\folktale\\helpers\\assert-type.js","node_modules\\folktale\\helpers\\fantasy-land.js","node_modules\\folktale\\core\\lambda\\curry.js","node_modules\\folktale\\helpers\\warn-deprecated-method.js","node_modules\\folktale\\helpers\\unsupported-method.js","node_modules\\folktale\\fantasy-land\\equals.js","node_modules\\folktale\\helpers\\provide-fantasy-land-aliases.js","node_modules\\folktale\\helpers\\copy-documentation.js","node_modules\\folktale\\adt\\union\\derivations\\equality.js","forktale-example-do.js"],"names":["BLAME_FUNCTION_INDEX","warnDeprecation","reason","stack","Error","offender","lines","split","console","warn","trim","module","exports","_require","require","typeSymbol","type","method","value","typeName","isPrototypeOf","mm","Symbol","for","copyDocumentation","source","target","extensions","arguments","length","undefined","Object","assign","object","meta","parent","getPrototypeOf","oldMeta","keys","forEach","key","test","slice","Id","id","CheckType","Left","Right","derive","sum","a","b","log","prop"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,uBAAuB,CAA3B,EAA8B;;AAE9B,SAASC,eAAT,CAAyBC,MAAzB,EAAiC;AAC/B;AACA,MAAI,cAAoC,MAAxC,EAAgD;AAC9C,QAAIC,QAAQ,IAAIC,KAAJ,CAAU,EAAV,EAAcD,KAA1B;AACA,QAAIE,WAAW,KAAK,CAApB;AACA,QAAIF,KAAJ,EAAW;AACT,UAAIG,QAAQH,MAAMI,KAAN,CAAY,IAAZ,CAAZ;AACAF,iBAAWC,MAAMN,oBAAN,CAAX;AACD;;AAED,QAAIK,QAAJ,EAAc;AACZG,cAAQC,IAAR,CAAaP,SAAS,eAAT,GAA2BG,SAASK,IAAT,EAAxC;AACD,KAFD,MAEO;AACLF,cAAQC,IAAR,CAAaP,MAAb;AACD;AACF;AACF;;AAEDS,OAAOC,OAAP,GAAiBX,eAAjB;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtoBAAR,CAAf;AAAA,IACIC,aAAaF,SAASE,UAD1B;;AAGAJ,OAAOC,OAAP,GAAiB,UAAUI,IAAV,EAAgB;AAC/B,SAAO,UAAUC,MAAV,EAAkBC,KAAlB,EAAyB;AAC9B,QAAIC,WAAWH,KAAKD,UAAL,CAAf;AACA,QAAI,cAAoC,MAApC,IAA8C,CAACC,KAAKI,aAAL,CAAmBF,KAAnB,CAAnD,EAA8E;AAC5EV,cAAQC,IAAR,CAAaU,WAAW,GAAX,GAAiBF,MAAjB,GAA0B,mDAA1B,GAAgFC,KAAhF,GAAwF,GAArG;;AAEA,UAAI,cAAoC,SAAxC,EAAmD;AACjDV,gBAAQC,IAAR,CAAa,yPAAyPU,QAAzP,GAAoQ,kyBAApQ,GAAyiCA,QAAziC,GAAojC,8WAApjC,GAAq6CA,QAAr6C,GAAg7C,mRAA77C;AACD;AACF;AACF,GATD;AAUD,CAXD;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvrOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIE,KAAKC,OAAOC,GAAP,CAAW,gBAAX,CAAT;;AAEA,IAAIC,oBAAoB,SAASA,iBAAT,CAA2BC,MAA3B,EAAmCC,MAAnC,EAA2C;AACjE,MAAIC,aAAaC,UAAUC,MAAV,GAAmB,CAAnB,IAAwBD,UAAU,CAAV,MAAiBE,SAAzC,GAAqDF,UAAU,CAAV,CAArD,GAAoE,EAArF;;AAEA,MAAI,cAA8B,OAAlC,EAA2C;AACzCF,WAAOL,EAAP,IAAaU,OAAOC,MAAP,CAAc,EAAd,EAAkBP,OAAOJ,EAAP,KAAc,EAAhC,EAAoCM,UAApC,CAAb;AACD;AACF,CAND;;AAQAhB,OAAOC,OAAP,GAAiBY,iBAAjB;;ACrpJ8BS,QAAQC,MAAM;AAC1C,MAAIC,SAASJ,OAAOK,cAAP,CAAsBH,MAAtB,CAAb,CACA,IAAII,UAAUJ,OAAOX,OAAOC,GAAP,CAAW,gBAAX,CAAP,KAAwC,EAAtD,CACA,IAAIY,UAAUA,OAAOb,OAAOC,GAAP,CAAW,gBAAX,CAAP,MAAyCc,OAAvD,EAAgE;AAC9DA,cAAU,EAAV;AACD,GAEDN,OAAOO,IAAP,CAAYJ,IAAZ,EAAkBK,OAAlB,CAA0B,UAAUC,GAAV,EAAe;AACvC,QAAI,KAAKC,IAAL,CAAUD,GAAV,CAAJ,EAAoB;AAClBH,cAAQG,IAAIE,KAAJ,CAAU,CAAV,CAAR,IAAwBR,KAAKM,GAAL,CAAxB;AACD,KAFD,MAEO;AACLH,cAAQG,GAAR,IAAeN,KAAKM,GAAL,CAAf;AACD;AACF,GAND,EAOAP,OAAOX,OAAOC,GAAP,CAAW,gBAAX,CAAP,IAAuCc,OAAvC,CAEA,OAAOJ,MAAP;AACD,GAjBD;;;;;;;;;;;;;;AAeA;;;;AACA;;;;;;AAEA;AACA,IAAMU,4BAAK,qBAAM,IAAN,EAAY;AAAEC,IAAF,cAAK1B,KAAL,EAAY;AAAE,WAAO,EAAEA,YAAF,EAAP;AAAkB;AAAhC,CAAZ,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAN;;AAEA,IAAM2B,YAAY,qBAAM,WAAN,EAAmB;AACnCC,MADmC,gBAC9B5B,KAD8B,EACvB;AAAE,qBAAeA,KAAf;AAA2C,GADtB;AAEnC6B,OAFmC,iBAE7B7B,KAF6B,EAEtB;AAAE,WAAO,EAAEA,YAAF,EAAP;AAAkB;AAFE,CAAnB,EAGf8B,MAHe,oBAAlB;;AAKAL,GAAGM,GAAH,GAAS,UAACC,CAAD,EAAIC,CAAJ;AAAA,SAAU3C,QAAQ4C,GAAR,QACVF,CADU,yCACVA,CADU,UAEVC,CAFU,yCAEVA,CAFU,EAAV;AAAA,CAAT;;AAKA,IAAME,OAAO,SAAPA,IAAO,CAACb,GAAD,EAAMP,MAAN;AAAA,SAAiBA,OAAOO,GAAP,CAAjB;AAAA,CAAb;;AAEAhC,QAAQ4C,GAAR,CACET,GAAGrB,OAAOC,GAAP,CAAW,qBAAX,CAAH,CADF,EAEE8B,KAAK,MAAL,EAAaV,GAAGrB,OAAOC,GAAP,CAAW,gBAAX,CAAH,CAAb,CAFF,EAGEoB,GAAGC,EAAH,CAAM,CAAN,CAHF,EAIED,GAAGM,GAAH,CAAO,CAAP,EAAU,CAAV,CAJF,EAKEN,GAAGM,GAAH,CAAO,CAAP,EAAU,GAAV,CALF","file":"23e0d46909e7a10153fb836b5c3ed9e2.map","sourcesContent":["'use strict';\n\n//----------------------------------------------------------------------\n//\n// This source file is part of the Folktale project.\n//\n// Licensed under MIT. See LICENCE for full licence information.\n// See CONTRIBUTORS for the list of contributors to the project.\n//\n//----------------------------------------------------------------------\n\nvar BLAME_FUNCTION_INDEX = 3; // [current, parent, *error*, caller to blame, â€¦]\n\nfunction warnDeprecation(reason) {\n  // eslint-disable-line max-statements\n  if (process.env.FOLKTALE_ASSERTIONS !== 'none') {\n    var stack = new Error('').stack;\n    var offender = void 0;\n    if (stack) {\n      var lines = stack.split('\\n');\n      offender = lines[BLAME_FUNCTION_INDEX];\n    }\n\n    if (offender) {\n      console.warn(reason + '\\n    Blame: ' + offender.trim());\n    } else {\n      console.warn(reason);\n    }\n  }\n}\n\nmodule.exports = warnDeprecation;","'use strict';\n\n//----------------------------------------------------------------------\n//\n// This source file is part of the Folktale project.\n//\n// Licensed under MIT. See LICENCE for full licence information.\n// See CONTRIBUTORS for the list of contributors to the project.\n//\n//----------------------------------------------------------------------\n\nvar keys = Object.keys;\nvar symbols = Object.getOwnPropertySymbols;\nvar defineProperty = Object.defineProperty;\nvar property = Object.getOwnPropertyDescriptor;\n\n/*\r\n * Extends an objects with own enumerable key/value pairs from other sources.\r\n *\r\n * This is used to define objects for the ADTs througout this file, and there\r\n * are some important differences from Object.assign:\r\n *\r\n *   - This code is only concerned with own enumerable property *names*.\r\n *   - Additionally this code copies all own symbols (important for tags).\r\n *\r\n * When copying, this function copies **whole property descriptors**, which\r\n * means getters/setters are not executed during the copying. The only\r\n * exception is when the property name is `prototype`, which is not\r\n * configurable in functions by default.\r\n *\r\n * This code only special cases `prototype` because any other non-configurable\r\n * property is considered an error, and should crash the program so it can be\r\n * fixed.\r\n */\nfunction extend(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    keys(source).forEach(function (key) {\n      if (key === 'prototype') {\n        target[key] = source[key];\n      } else {\n        defineProperty(target, key, property(source, key));\n      }\n    });\n    symbols(source).forEach(function (symbol) {\n      defineProperty(target, symbol, property(source, symbol));\n    });\n  });\n  return target;\n}\n\nmodule.exports = extend;","'use strict';\n\nfunction _defineEnumerableProperties(obj, descs) { for (var key in descs) { var desc = descs[key]; desc.configurable = desc.enumerable = true; if (\"value\" in desc) desc.writable = true; Object.defineProperty(obj, key, desc); } return obj; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//----------------------------------------------------------------------\n//\n// This source file is part of the Folktale project.\n//\n// Licensed under MIT. See LICENCE for full licence information.\n// See CONTRIBUTORS for the list of contributors to the project.\n//\n//----------------------------------------------------------------------\n\n// --[ Dependencies ]---------------------------------------------------\nvar warnDeprecation = require('../../helpers/warn-deprecation');\nvar extend = require('../../helpers/extend');\n\n// --[ Constants and Aliases ]------------------------------------------\nvar TYPE = Symbol.for('@@folktale:adt:type');\nvar TAG = Symbol.for('@@folktale:adt:tag');\nvar META = Symbol.for('@@meta:magical');\n\nvar keys = Object.keys;\n\n// --[ Helpers ]--------------------------------------------------------\n\n//\n// Returns an array of own enumerable values in an object.\n//\nfunction values(object) {\n  return keys(object).map(function (key) {\n    return object[key];\n  });\n}\n\n//\n// Transforms own enumerable key/value pairs.\n//\nfunction mapObject(object, transform) {\n  return keys(object).reduce(function (result, key) {\n    result[key] = transform(key, object[key]);\n    return result;\n  }, {});\n}\n\n// --[ Variant implementation ]-----------------------------------------\n\n//\n// Defines the variants given a set of patterns and an ADT namespace.\n//\nfunction defineVariants(typeId, patterns, adt) {\n  return mapObject(patterns, function (name, constructor) {\n    var _constructor, _ref, _extend, _mutatorMap, _tag, _type, _constructor2, _extend2, _mutatorMap2;\n\n    // ---[ Variant Internals ]-----------------------------------------\n    function InternalConstructor() {}\n    InternalConstructor.prototype = Object.create(adt);\n\n    extend(InternalConstructor.prototype, (_extend = {}, _defineProperty(_extend, TAG, name), _constructor = 'constructor', _mutatorMap = {}, _mutatorMap[_constructor] = _mutatorMap[_constructor] || {}, _mutatorMap[_constructor].get = function () {\n      return constructor;\n    }, _ref = 'is' + name, _mutatorMap[_ref] = _mutatorMap[_ref] || {}, _mutatorMap[_ref].get = function () {\n      warnDeprecation('.is' + name + ' is deprecated. Use ' + name + '.hasInstance(value)\\ninstead to check if a value belongs to the ADT variant.');\n      return true;\n    }, _defineProperty(_extend, 'matchWith', function matchWith(pattern) {\n      return pattern[name](this);\n    }), _defineEnumerableProperties(_extend, _mutatorMap), _extend));\n\n    function makeInstance() {\n      var result = new InternalConstructor(); // eslint-disable-line prefer-const\n      extend(result, constructor.apply(undefined, arguments) || {});\n      return result;\n    }\n\n    extend(makeInstance, (_extend2 = {}, _defineProperty(_extend2, META, constructor[META]), _tag = 'tag', _mutatorMap2 = {}, _mutatorMap2[_tag] = _mutatorMap2[_tag] || {}, _mutatorMap2[_tag].get = function () {\n      return name;\n    }, _type = 'type', _mutatorMap2[_type] = _mutatorMap2[_type] || {}, _mutatorMap2[_type].get = function () {\n      return typeId;\n    }, _constructor2 = 'constructor', _mutatorMap2[_constructor2] = _mutatorMap2[_constructor2] || {}, _mutatorMap2[_constructor2].get = function () {\n      return constructor;\n    }, _defineProperty(_extend2, 'prototype', InternalConstructor.prototype), _defineProperty(_extend2, 'hasInstance', function hasInstance(value) {\n      return Boolean(value) && adt.hasInstance(value) && value[TAG] === name;\n    }), _defineEnumerableProperties(_extend2, _mutatorMap2), _extend2));\n\n    return makeInstance;\n  });\n}\n\n// --[ ADT Implementation ]--------------------------------------------\n\n/*~\r\n * authors:\r\n *   - Quildreen Motta\r\n * \r\n * stability: experimental\r\n * type: |\r\n *   (String, Object (Array String)) => Union\r\n */\nvar union = function union(typeId, patterns) {\n  var _extend3;\n\n  var UnionNamespace = Object.create(Union);\n  var variants = defineVariants(typeId, patterns, UnionNamespace);\n\n  extend(UnionNamespace, variants, (_extend3 = {}, _defineProperty(_extend3, TYPE, typeId), _defineProperty(_extend3, 'variants', values(variants)), _defineProperty(_extend3, 'hasInstance', function hasInstance(value) {\n    return Boolean(value) && value[TYPE] === this[TYPE];\n  }), _extend3));\n\n  return UnionNamespace;\n};\n\n/*~ ~belongsTo : union */\nvar Union = {\n  /*~\r\n   * type: |\r\n   *   Union . (...(Variant, Union) => Any) => Union\r\n   */\n  derive: function derive() {\n    var _this = this;\n\n    for (var _len = arguments.length, derivations = Array(_len), _key = 0; _key < _len; _key++) {\n      derivations[_key] = arguments[_key];\n    }\n\n    derivations.forEach(function (derivation) {\n      _this.variants.forEach(function (variant) {\n        return derivation(variant, _this);\n      });\n    });\n    return this;\n  }\n};\n\n// --[ Exports ]--------------------------------------------------------\nunion.Union = Union;\nunion.typeSymbol = TYPE;\nunion.tagSymbol = TAG;\n\nmodule.exports = union;","'use strict';\n\n//----------------------------------------------------------------------\n//\n// This source file is part of the Folktale project.\n//\n// Licensed under MIT. See LICENCE for full licence information.\n// See CONTRIBUTORS for the list of contributors to the project.\n//\n//----------------------------------------------------------------------\n\nvar _require = require('../adt/union/union'),\n    typeSymbol = _require.typeSymbol;\n\nmodule.exports = function (type) {\n  return function (method, value) {\n    var typeName = type[typeSymbol];\n    if (process.env.FOLKTALE_ASSERTIONS !== 'none' && !type.isPrototypeOf(value)) {\n      console.warn(typeName + '.' + method + ' expects a value of the same type, but was given ' + value + '.');\n\n      if (process.env.FOLKTALE_ASSERTIONS !== 'minimal') {\n        console.warn('\\nThis could mean that you\\'ve provided the wrong value to the method, in\\nwhich case this is a bug in your program, and you should try to track\\ndown why the wrong value is getting here.\\n\\nBut this could also mean that you have more than one ' + typeName + ' library\\ninstantiated in your program. This is not **necessarily** a bug, it\\ncould happen for several reasons:\\n\\n 1) You\\'re loading the library in Node, and Node\\'s cache didn\\'t give\\n    you back the same instance you had previously requested.\\n\\n 2) You have more than one Code Realm in your program, and objects\\n    created from the same library, in different realms, are interacting.\\n\\n 3) You have a version conflict of folktale libraries, and objects\\n    created from different versions of the library are interacting.\\n\\nIf your situation fits the cases (1) or (2), you are okay, as long as\\nthe objects originate from the same version of the library. Folktale\\ndoes not rely on reference checking, only structural checking. However\\nyou\\'ll want to watch out if you\\'re modifying the ' + typeName + '\\'s prototype,\\nbecause you\\'ll have more than one of them, and you\\'ll want to make\\nsure you do the same change in all of them \\u2014 ideally you shouldn\\'t\\nbe modifying the object, though.\\n\\nIf your situation fits the case (3), you are *probably* okay if the\\nversion difference isn\\'t a major one. However, at this point the\\nbehaviour of your program using ' + typeName + ' is undefined, and you should\\ntry looking into why the version conflict is happening.\\n\\nParametric modules can help ensuring your program only has a single\\ninstance of the folktale library. Check out the Folktale Architecture\\ndocumentation for more information.\\n      ');\n      }\n    }\n  };\n};","'use strict';\n\n//----------------------------------------------------------------------\n//\n// This source file is part of the Folktale project.\n//\n// Licensed under MIT. See LICENCE for full licence information.\n// See CONTRIBUTORS for the list of contributors to the project.\n//\n//----------------------------------------------------------------------\n\nmodule.exports = {\n  equals: 'fantasy-land/equals',\n  concat: 'fantasy-land/concat',\n  empty: 'fantasy-land/empty',\n  map: 'fantasy-land/map',\n  ap: 'fantasy-land/ap',\n  of: 'fantasy-land/of',\n  reduce: 'fantasy-land/reduce',\n  traverse: 'fantasy-land/traverse',\n  chain: 'fantasy-land/chain',\n  chainRec: 'fantasy-land/chainRec',\n  extend: 'fantasy-land/extend',\n  extract: 'fantasy-land/extract',\n  bimap: 'fantasy-land/bimap',\n  promap: 'fantasy-land/promap'\n};","\"use strict\";\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n//----------------------------------------------------------------------\n//\n// This source file is part of the Folktale project.\n//\n// Licensed under MIT. See LICENCE for full licence information.\n// See CONTRIBUTORS for the list of contributors to the project.\n//\n//----------------------------------------------------------------------\n\n/*~\r\n * stability: experimental\r\n * authors:\r\n *   - Quildreen Motta\r\n *\r\n * type: |\r\n *   (Number, (Any...) => 'a) => Any... => 'a or ((Any...) => 'a)\r\n */\nvar curry = function curry(arity, fn) {\n  var curried = function curried(oldArgs) {\n    return function () {\n      for (var _len = arguments.length, newArgs = Array(_len), _key = 0; _key < _len; _key++) {\n        newArgs[_key] = arguments[_key];\n      }\n\n      var allArgs = oldArgs.concat(newArgs);\n      var argCount = allArgs.length;\n\n      return argCount < arity ? curried(allArgs) : /* otherwise */fn.apply(undefined, _toConsumableArray(allArgs));\n    };\n  };\n\n  return curried([]);\n};\n\n// --[ Exports ]-------------------------------------------------------\nmodule.exports = curry;","'use strict';\n\n//----------------------------------------------------------------------\n//\n// This source file is part of the Folktale project.\n//\n// Licensed under MIT. See LICENCE for full licence information.\n// See CONTRIBUTORS for the list of contributors to the project.\n//\n//----------------------------------------------------------------------\n\nvar deprecated = require('./warn-deprecation');\n\nmodule.exports = function (methodName) {\n  return function (result) {\n    deprecated('Type.' + methodName + '() is being deprecated in favour of Type[\\'fantasy-land/' + methodName + '\\'](). \\n    Your data structure is using the old-style fantasy-land methods,\\n    and these won\\'t be supported in Folktale 3');\n    return result;\n  };\n};","\"use strict\";\n\n//----------------------------------------------------------------------\n//\n// This source file is part of the Folktale project.\n//\n// Licensed under MIT. See LICENCE for full licence information.\n// See CONTRIBUTORS for the list of contributors to the project.\n//\n//----------------------------------------------------------------------\n\nmodule.exports = function (methodName) {\n  return function (object) {\n    throw new TypeError(object + \" does not have a method '\" + methodName + \"'.\");\n  };\n};","'use strict';\n\n//----------------------------------------------------------------------\n//\n// This source file is part of the Folktale project.\n//\n// Licensed under MIT. See LICENCE for full licence information.\n// See CONTRIBUTORS for the list of contributors to the project.\n//\n//----------------------------------------------------------------------\n\nvar _require = require('../helpers/fantasy-land'),\n    flEquals = _require.equals;\n\nvar curry = require('../core/lambda/curry');\nvar warn = require('../helpers/warn-deprecated-method')('equals');\nvar unsupported = require('../helpers/unsupported-method')('equals');\n\nvar isNew = function isNew(a) {\n  return typeof a[flEquals] === 'function';\n};\nvar isOld = function isOld(a) {\n  return typeof a.equals === 'function';\n};\n\n/*~\r\n * stability: experimental\r\n * authors:\r\n *   - \"@boris-marinov\"\r\n *   - Quildreen Motta\r\n * \r\n * type: |\r\n *   forall S, a:\r\n *     (S a, S a) => Boolean\r\n *   where S is Setoid\r\n */\nvar equals = function equals(setoidLeft, setoidRight) {\n  return isNew(setoidLeft) ? setoidLeft[flEquals](setoidRight) : isOld(setoidLeft) ? warn(setoidLeft.equals(setoidRight)) : /*otherwise*/unsupported(setoidLeft);\n};\n\n/*~\r\n * stability: experimental\r\n * authors:\r\n *   - \"@boris-marinov\"\r\n *   - Quildreen Motta\r\n * \r\n * type: |\r\n *   forall S, a:\r\n *     (S a) => (S a) => Boolean\r\n *   where S is Setoid\r\n */\nequals.curried = curry(2, function (setoidRight, setoidLeft) {\n  return (// eslint-disable-line no-magic-numbers\n    equals(setoidLeft, setoidRight)\n  );\n});\n\n/*~\r\n * stability: experimental\r\n * authors:\r\n *   - Quildreen Motta\r\n * \r\n * type: |\r\n *   forall S, a:\r\n *     (S a).(S a) => Boolean\r\n *   where S is Setoid\r\n */\nequals.infix = function (aSetoid) {\n  return equals(this, aSetoid);\n};\n\nmodule.exports = equals;","'use strict';\n\n//----------------------------------------------------------------------\n//\n// This source file is part of the Folktale project.\n//\n// Licensed under MIT. See LICENCE for full licence information.\n// See CONTRIBUTORS for the list of contributors to the project.\n//\n//----------------------------------------------------------------------\n\n\nvar aliases = {\n  equals: {\n    /*~\r\n     * module: null\r\n     * type: |\r\n     *   ('S 'a).('S 'a) => Boolean\r\n     *   where 'S is Setoid\r\n     */\n    'fantasy-land/equals': function fantasyLandEquals(that) {\n      return this.equals(that);\n    }\n  },\n\n  concat: {\n    /*~\r\n     * module: null\r\n     * type: |\r\n     *   ('S 'a).('S 'a) => 'S 'a\r\n     *   where 'S is Semigroup\r\n     */\n    'fantasy-land/concat': function fantasyLandConcat(that) {\n      return this.concat(that);\n    }\n  },\n\n  empty: {\n    /*~\r\n     * module: null\r\n     * type: |\r\n     *   ('M).() => 'M a\r\n     *   where 'M is Monoid\r\n     */\n    'fantasy-land/empty': function fantasyLandEmpty() {\n      return this.empty();\n    }\n  },\n\n  map: {\n    /*~\r\n     * module: null\r\n     * type: |\r\n     *   ('F 'a).(('a) => 'b) => 'F 'b\r\n     *   where 'F is Functor\r\n     */\n    'fantasy-land/map': function fantasyLandMap(transformation) {\n      return this.map(transformation);\n    }\n  },\n\n  apply: {\n    /*~\r\n     * module: null\r\n     * type: |\r\n     *   ('F ('a) => b).('F 'a) => 'F 'b\r\n     *   where 'F is Apply\r\n     */\n    ap: function ap(that) {\n      return this.apply(that);\n    },\n\n\n    /*~\r\n     * module: null\r\n     * type: |\r\n     *   ('F 'a).('F ('a) => 'b) => 'F 'b\r\n     *   where 'F is Apply\r\n     */\n    'fantasy-land/ap': function fantasyLandAp(that) {\n      return that.apply(this);\n    }\n  },\n\n  of: {\n    /*~\r\n     * module: null\r\n     * type: |\r\n     *   forall F, a:\r\n     *     (F).(a) => F a\r\n     *   where F is Applicative \r\n     */\n    'fantasy-land/of': function fantasyLandOf(value) {\n      return this.of(value);\n    }\n  },\n\n  reduce: {\n    /*~\r\n     * module: null\r\n     * type: |\r\n     *   forall F, a, b:\r\n     *     (F a).((b, a) => b, b) => b\r\n     *   where F is Foldable  \r\n     */\n    'fantasy-land/reduce': function fantasyLandReduce(combinator, initial) {\n      return this.reduce(combinator, initial);\n    }\n  },\n\n  traverse: {\n    /*~\r\n     * module: null\r\n     * type: |\r\n     *   forall F, T, a, b:\r\n     *     (T a).((a) => F b, (c) => F c) => F (T b)\r\n     *   where F is Apply, T is Traversable\r\n     */\n    'fantasy-land/traverse': function fantasyLandTraverse(transformation, lift) {\n      return this.traverse(transformation, lift);\n    }\n  },\n\n  chain: {\n    /*~\r\n     * module: null\r\n     * type: |\r\n     *   forall M, a, b:\r\n     *     (M a).((a) => M b) => M b\r\n     *   where M is Chain\r\n     */\n    'fantasy-land/chain': function fantasyLandChain(transformation) {\n      return this.chain(transformation);\n    }\n  },\n\n  chainRecursively: {\n    /*~\r\n     * module: null\r\n     * type: |\r\n     *   forall M, a, b, c:\r\n     *     (M).(\r\n     *       Step:    ((a) => c, (b) => c, a) => M c,\r\n     *       Initial: a\r\n     *     ) => M b\r\n     *   where M is ChainRec \r\n     */\n    chainRec: function chainRec(step, initial) {\n      return this.chainRecursively(step, initial);\n    },\n\n\n    /*~\r\n     * module: null\r\n     * type: |\r\n     *   forall M, a, b, c:\r\n     *     (M).(\r\n     *       Step:    ((a) => c, (b) => c, a) => M c,\r\n     *       Initial: a\r\n     *     ) => M b\r\n     *   where M is ChainRec \r\n     */\n    'fantasy-land/chainRec': function fantasyLandChainRec(step, initial) {\n      return this.chainRecursively(step, initial);\n    }\n  },\n\n  extend: {\n    /*~\r\n     * module: null\r\n     * type: |\r\n     *   forall W, a, b:\r\n     *     (W a).((W a) => b) => W b\r\n     *   where W is Extend\r\n     */\n    'fantasy-land/extend': function fantasyLandExtend(transformation) {\n      return this.extend(transformation);\n    }\n  },\n\n  extract: {\n    /*~\r\n     * module: null\r\n     * type: |\r\n     *   forall W, a, b:\r\n     *     (W a).() => a\r\n     *   where W is Comonad\r\n     */\n    'fantasy-land/extract': function fantasyLandExtract() {\n      return this.extract();\n    }\n  },\n\n  bimap: {\n    /*~\r\n     * module: null\r\n     * type: |\r\n     *   forall F, a, b, c, d:\r\n     *     (F a b).((a) => c, (b) => d) => F c d\r\n     *   where F is Bifunctor\r\n     */\n    'fantasy-land/bimap': function fantasyLandBimap(f, g) {\n      return this.bimap(f, g);\n    }\n  },\n\n  promap: {\n    /*~\r\n     * module: null\r\n     * type: |\r\n     *   forall P, a, b, c, d:\r\n     *     (P a b).((c) => a, (b) => d) => P c d\r\n     */\n    'fantasy-land/promap': function fantasyLandPromap(f, g) {\n      return this.promap(f, g);\n    }\n  }\n};\n\nvar provideAliases = function provideAliases(structure) {\n  Object.keys(aliases).forEach(function (method) {\n    if (typeof structure[method] === 'function') {\n      Object.keys(aliases[method]).forEach(function (alias) {\n        structure[alias] = aliases[method][alias];\n      });\n    }\n  });\n};\n\nmodule.exports = provideAliases;","'use strict';\n\n//----------------------------------------------------------------------\n//\n// This source file is part of the Folktale project.\n//\n// Licensed under MIT. See LICENCE for full licence information.\n// See CONTRIBUTORS for the list of contributors to the project.\n//\n//----------------------------------------------------------------------\n\nvar mm = Symbol.for('@@meta:magical');\n\nvar copyDocumentation = function copyDocumentation(source, target) {\n  var extensions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (process.env.FOLKTALE_DOCS !== 'false') {\n    target[mm] = Object.assign({}, source[mm] || {}, extensions);\n  }\n};\n\nmodule.exports = copyDocumentation;","'use strict';\n\n//----------------------------------------------------------------------\n//\n// This source file is part of the Folktale project.\n//\n// Licensed under MIT. See LICENCE for full licence information.\n// See CONTRIBUTORS for the list of contributors to the project.\n//\n//----------------------------------------------------------------------\n\n// --[ Dependencies ]---------------------------------------------------\nvar assertType = require('../../../helpers/assert-type');\nvar flEquals = require('../../../fantasy-land/equals');\nvar fl = require('../../../helpers/fantasy-land');\nvar provideAliases = require('../../../helpers/provide-fantasy-land-aliases');\nvar copyDocs = require('../../../helpers/copy-documentation');\n\nvar _require = require('../union'),\n    tagSymbol = _require.tagSymbol,\n    typeSymbol = _require.typeSymbol;\n\nvar toString = Object.prototype.toString;\nvar prototypeOf = Object.getPrototypeOf;\n\n// --[ Helpers ]--------------------------------------------------------\n\n/*~\r\n * type: (Any) => Boolean\r\n */\nvar isSetoid = function isSetoid(value) {\n  return value != null && (typeof value[fl.equals] === 'function' || typeof value.equals === 'function');\n};\n\n/*~\r\n * type: (Variant, Variant) => Boolean\r\n */\nvar sameType = function sameType(a, b) {\n  return a[typeSymbol] === b[typeSymbol] && a[tagSymbol] === b[tagSymbol];\n};\n\nvar isPlainObject = function isPlainObject(object) {\n  if (Object(object) !== object) return false;\n\n  return !prototypeOf(object) || !object.toString || toString.call(object) === object.toString();\n};\n\nvar deepEquals = function deepEquals(a, b) {\n  if (a === b) return true;\n\n  var leftSetoid = isSetoid(a);\n  var rightSetoid = isSetoid(b);\n  if (leftSetoid) {\n    if (rightSetoid) return flEquals(a, b);else return false;\n  }\n\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return a.length === b.length && a.every(function (x, i) {\n      return deepEquals(x, b[i]);\n    });\n  }\n\n  if (isPlainObject(a) && isPlainObject(b)) {\n    var keysA = Object.keys(a);\n    var keysB = Object.keys(b);\n    var setB = new Set(keysB);\n    return keysA.length === keysB.length && prototypeOf(a) === prototypeOf(b) && keysA.every(function (k) {\n      return setB.has(k) && a[k] === b[k];\n    });\n  }\n\n  return false;\n};\n\n// --[ Implementation ]------------------------------------------------\n/*~\r\n * stability: experimental\r\n * authors:\r\n *   - \"@boris-marinov\"\r\n * \r\n * type: |\r\n *   (('a, 'a) => Boolean) => (Variant, Union) => Void\r\n */\nvar createDerivation = function createDerivation(valuesEqual) {\n  /*~\r\n   * type: ('a, 'a) => Boolean\r\n   */\n  var equals = function equals(a, b) {\n    // identical objects must be equal\n    if (a === b) return true;\n\n    // we require both values to be setoids if one of them is\n    var leftSetoid = isSetoid(a);\n    var rightSetoid = isSetoid(b);\n    if (leftSetoid) {\n      if (rightSetoid) return flEquals(a, b);else return false;\n    }\n\n    // fall back to the provided equality\n    return valuesEqual(a, b);\n  };\n\n  /*~\r\n   * type: (Object Any, Object Any, Array String) => Boolean\r\n   */\n  var compositesEqual = function compositesEqual(a, b, keys) {\n    for (var i = 0; i < keys.length; ++i) {\n      var keyA = a[keys[i]];\n      var keyB = b[keys[i]];\n      if (!equals(keyA, keyB)) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  var derivation = function derivation(variant, adt) {\n    /*~\r\n     * stability: experimental\r\n     * module: null\r\n     * authors:\r\n     *   - \"@boris-marinov\"\r\n     *   - Quildreen Motta\r\n     * \r\n     * type: |\r\n     *   forall S, a:\r\n     *     (S a).(S a) => Boolean\r\n     *   where S is Setoid\r\n     */\n    variant.prototype.equals = function (value) {\n      assertType(adt)(this[tagSymbol] + '#equals', value);\n      return sameType(this, value) && compositesEqual(this, value, Object.keys(this));\n    };\n    provideAliases(variant.prototype);\n    return variant;\n  };\n  copyDocs(createDerivation, derivation, {\n    type: '(Variant, Union) => Void'\n  });\n\n  return derivation;\n};\n\n// --[ Exports ]-------------------------------------------------------\n\n/*~~inheritsMeta: createDerivation */\nmodule.exports = createDerivation(deepEquals);\n\nmodule.exports.withCustomComparison = createDerivation;","/* const task = require('folktale/concurrency/task')\r\n\r\nconst resultTask = task.do(function* () {\r\n  const a = yield task.of(1)\r\n  const b = yield task.of(2)\r\n\r\n  return task.of((a + b) * (yield task.of(3)))\r\n})\r\n\r\nconst value = resultTask.run().promise()\r\n.then(value => {\r\n  console.log(value)\r\n}) */\r\n\r\n\r\nimport union from 'folktale/adt/union/union'\r\nimport Equality from 'folktale/adt/union/derivations/equality'\r\n\r\n/*~ type: (Number, Number) => Number */\r\nconst Id = union('Id', { id(value) { return { value } } })\r\n\r\nconst CheckType = union('CheckType', {\r\n  Left(value) { return `This ${value} is not right type.` },\r\n  Right(value) { return { value } }\r\n}).derive(Equality)\r\n\r\nId.sum = (a, b) => console.log(\r\n  typeof a,\r\n  typeof b\r\n)\r\n\r\nconst prop = (key, object) => object[key]\r\n\r\nconsole.log(\r\n  Id[Symbol.for('@@folktale:adt:type')],\r\n  prop('type', Id[Symbol.for('@@meta:magical')]),\r\n  Id.id(1),\r\n  Id.sum(1, 2),\r\n  Id.sum(1, \"2\")\r\n)\r\n"]}